@font-face {
  font-family: "KakaoSmallSans-Bold";
  src: url("https://fastly.jsdelivr.net/gh/projectnoonnu/2503@1.0/KakaoSmallSans-Bold.woff2")
    format("woff2");
  font-weight: 700;
  font-style: normal;
}

/* Global 변수 */
:root {
  --color-primary: var(--color-black);
  --color-primary-variant: var(--color-gray);
  --color-accent: var(--color-blue);
  --color-accent-variant: var(--color-orange);
  --color-text: var(--color-white);

  /* colors */
  --color-white: #f5f5f5;
  --color-black: #1e1e2f;
  --color-blue: #ff6f61;
  --color-orange: #ffa600;
  --color-gray: #2d2f45;

  /* size */
  --size-max-width: 1000px;
}

.flex-container {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: center;
  gap: 1em;
}
.flex-item {
  flex: 1 1 300px;
  padding: 1em;
  border-radius: 8px;
}

* {
  box-sizing: border-box;
}

body {
  font-size: 16px;
  font-family: "KakaoSmallSans-Bold";
  margin: 0;
  padding: 0;
}
.container {
  width: 90%;
  max-width: var(--size-max-width);
  margin: 0 auto;
  padding: 2em;
}
@media screen and (min-width: 768px) {
  body {
    font-size: 18px;
  }

  .container {
    padding: 3em;
  }
}
.flex-container {
  justify-content: space-between;
  align-items: flex-end;
}

.flex-item:nth-child(1) {
  order: 2;
}

.flex-item:nth-child(2) {
  order: 1;
}

.flex-item:nth-child(3) {
  order: 3;
}

.flex-item {
  width: 30%;
}
h1,
h2,
h3,
p,
ul {
  margin: 0;
}
ul {
  list-style: none;
  padding: 0;
}
a {
  text-decoration: none;
  color: var(--color-text);
}
button {
  background-color: transparent; /* 요소의 배경색을 투명하게 설정 */
  outline: 0;
  border: 0;
}
button:focus {
  outline: 1px solid var(--color-accent);
}
.section {
  padding: 4rem;
  text-align: center;
}
.max-container {
  max-width: var(--size-max-width);
  margin: auto;
}
.title {
  font-size: 2.5rem;
  margin: 1rem 0;
}
.description {
  font-size: 1rem;
  margin: 0.5rem 0;
}

/* header */
.header {
  background-color: var(--color-primary);
  position: fixed;
  top: 0;
  width: 100%;
  padding: 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  z-index: 1;
}
.header__logo {
  display: flex;
  align-items: left;
  gap: 8px;
}
.header__logo__img {
  width: 30px;
  height: 30px;
}
.header__logo__title {
  font-size: 1.8rem;
}
.header__menu {
  display: flex;
  gap: 4px;
}
.header__menu__item {
  padding: 8px 16px;
}
.header__menu__item:hover {
  border-bottom: 1px solid var(--color-accent);
}
.header__menu__item:active {
  border: 1px solid var(--color-accent);
  border-radius: 4px;
}

/* Home */
#home {
  background-color: var(--color-primary);
  color: var(--color-text);
  padding: 7rem 1rem 5rem;
  text-align: center;
}
.home__avatar {
  width: 200px;
  height: 200px;
  border-radius: 70%;
  border: 3px solid var(--color-accent);
  object-fit: cover; /* 이미지가 부모 요소의 크기에 맞춰 비율을 유지하면서 꽉 차도록 설정 */
}
.home__title {
  font-size: 2rem;
  margin-bottom: 1rem;
}
.home__title--string {
  color: var(--color-accent);
}
.home__description {
  font-size: 1.5rem;
}
.home__contact {
  display: inline-block;
  background-color: var(--color-accent);
  color: var(--color-black);
  margin: 2rem;
  padding: 0.5rem 1rem;
  font-weight: bold;
  border-radius: 4px;
}
.home_contact:hover {
  background-color: transparent;
  color: var(--color-text);
  outline: 2px solid var(--color-accent);
}

/* about */
.skills {
  display: grid;
  justify-content: space-between;
  gap: 1rem;
  margin: 2rem 0;
}
.skill {
  background-color: gray;
  padding: 2rem 1rem;
  color: #f5f5f5;
  border-radius: 1rem;
  cursor: pointer;
  box-shadow: 4px 8px 8px rgba(0, 0, 0, 0.4);
}
.skill__icon {
  font-size: 3rem;
  margin: 1rem 0;
  color: greenyellow;
}

.skill__title {
  font-size: 1.5rem;
  font-weight: lighter;
  margin-bottom: 1rem;
}
.jobs {
  text-align: start; /* 언어에 따라 시작위치를 다르게 설정 */
}
.job {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-bottom: 1rem;
}

/* skills */
#skills {
  background-color: darkgray;
  color: white;
}
.tools {
  display: grid;
  grid-template-columns: 6fr 4fr;
  margin: 2rem 3rem;
  border-radius: 8px;
  overflow: hidden;
}
.tools__title {
  color: black;
  margin: 1rem 0;
  font-size: 1.2rem;
}
.tools__coding {
  color: whitesmoke;
  grid-row: span 2; /* 2개의 행을 차지하도록 설정 */
  display: flex;
  flex-direction: column;
  padding: 3rem;
  gap: 0.5rem;
}

.bar {
  display: flex;
  flex-direction: column;
  padding: 1rem;
  gap: 0.5rem;
}
.bar__metadata {
  display: flex;
  justify-content: space-between;
}
.bar__bg {
  width: 100%;
  height: 2px;
  background-color: #f5f5f5;
}
.bar__value {
  height: 3px;
  background-color: purple;
}

.tools__tools {
  padding: 2rem;
}
.tools__etc {
  padding: 3rem;
  background-color: var(--color-primary);
  filter: brightness(150%);
}

.category__count {
  opacity: 0;
  position: absolute;
  top: -20px;
  right: 16px;
  width: 28px;
  height: 28px;
  line-height: 28px;
  border-radius: 100%;
  background-color: var(--color-accent-variant);
  color: var(--color-text);
  transition: all 250ms ease-in;
}

/*
    after: 요소 뒤에 가상의 요소를 하나 만들어주는 선택자
    content: "" 아무 내용도 없는 빈 가상 요소를 만듦
    display: block; 가상 요소를 블록 요소처럼 만들어서 크기를 줄 수 있게 함
  */

/*license*/
.liecenses {
  margin: 3rem;
}

.license {
  display: flex;
  gap: 2rem;
  align-items: center;
  margin-bottom: 2rem;
}

.license__img {
  width: 150px;
  height: 150px;
  border-radius: 100%;
  box-shadow: 0px 3px 8px rgba(0, 0, 0, 0.3);
}

.license__bubble {
  padding: 1rem;
  border-radius: 8px;
  box-shadow: rgba(0, 0, 0, 0.3);
}

.license__bubble__name {
  color: var(--color-accent);
  font-weight: bold;
  filter: brightness(70%);
}

/* arrow up */
.arrow-up {
  background-color: var(--color-primary);
  position: fixed;
  bottom: 2rem;
  right: 2rem;
  font-size: 3rem;
  width: 4rem;
  height: 4rem;
  border-radius: 90%;
  text-align: center;
}

/* footer */
#contact {
  background-color: var(--color-primary);
  color: var(--color-text);
}
.contact__links {
  display: flex;
  justify-content: center;
  gap: 1rem;
  padding: 1rem;
  font-size: 2rem;
}
.contact__link {
  transition: color 250ms ease-in;
}
.contact__link:hover {
  color: var(--color-accent);
}
